{"version":3,"sources":["img/bg.png","question.js","App.js","index.js"],"names":["question","showButtons","setShowButtons","score","showScore","setShowScore","setScore","setIndex","index","resultInfo","setResultInfo","setShowFinal","playing","setPlaying","showFinal","htmlDecode","input","e","document","createElement","innerHTML","childNodes","length","nodeValue","correct_answer","newIndex","setTimeout","incorrect_answer","randomNumber","Math","floor","random","orderOfIncorrect","push","apply","className","incorrect_answers","href","onClick","App","useState","questions","setQuestions","fetchQuestions","a","fetch","response","json","data","results","useEffect","style","backgroundImage","background","height","backgroundSize","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.95e73786.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.a932037c.png\";","import React from 'react'\r\n\r\nconst question = ({showButtons, setShowButtons, score , showScore, setShowScore, question, setScore, setIndex, index, resultInfo, setResultInfo, playing, setPlaying, showFinal, setShowFinal}) => {\r\n    \r\n    function htmlDecode(input){\r\n        var e = document.createElement('textarea');\r\n        e.innerHTML = input;\r\n        // handle case of empty input\r\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\r\n      }\r\n\r\n    const correct_answer = () => {\r\n        setResultInfo(`Right! Your Score - ${score}`)\r\n        let newScore = score+1\r\n        let newIndex = index+1;\r\n        setScore(newScore)\r\n        setShowButtons(false)\r\n        setShowScore(true)\r\n        if(newIndex > 9) {\r\n            setShowFinal(true)\r\n        } else {\r\n            setTimeout(() => {\r\n                setIndex(newIndex)\r\n                setShowButtons(true)\r\n                setShowScore(false)\r\n            }, 1000);\r\n\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n\r\n    const incorrect_answer = () => {\r\n        setResultInfo(`Wrong! Your Score - ${score}`)\r\n        let newScore = score;\r\n        let newIndex = index+1;\r\n        setScore(newScore)\r\n        setShowButtons(false)\r\n        setShowScore(true)\r\n        if(newIndex > 9) {\r\n            setShowFinal(true)\r\n        } else {\r\n            setTimeout(() => {\r\n                setIndex(newIndex)\r\n                setShowButtons(true)\r\n                setShowScore(false)\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    let randomNumber = Math.floor(Math.random() * 4) + 1;\r\n\r\n    let orderOfIncorrect = [1,2,3,3]\r\n\r\n    if(randomNumber === 1) {\r\n        orderOfIncorrect.length = 0;                  // Clear contents\r\n        orderOfIncorrect.push.apply(orderOfIncorrect, [0,0,1,2]);\r\n    } else if(randomNumber === 2) {\r\n        orderOfIncorrect.length = 0;                  // Clear contents\r\n        orderOfIncorrect.push.apply(orderOfIncorrect, [0,0,1,2]);\r\n    } else if(randomNumber === 3) {\r\n        orderOfIncorrect.length = 0;                  // Clear contents\r\n        orderOfIncorrect.push.apply(orderOfIncorrect, [0,1,1,2]);\r\n    } else if(randomNumber === 4) {\r\n        orderOfIncorrect.length = 0;                  // Clear contents\r\n        orderOfIncorrect.push.apply(orderOfIncorrect, [0,1,2,2]);\r\n    }\r\n\r\n    const returnButtons = () => {\r\n        return (\r\n            \"cokc\"\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"question_title\">{htmlDecode(question.question)}</h2>\r\n            {showButtons=== true&& showScore===false ? \r\n            <div>{question.incorrect_answers.length === 1 ? \r\n                <div className=\"buttons_wrapper\">    \r\n                    {randomNumber===1||randomNumber===2 ? <button href=\"something\" className=\"button_hero\" onClick={correct_answer}>{htmlDecode(question.correct_answer)}</button>:<button href=\"something\" className=\"button_hero\" onClick={incorrect_answer}>{htmlDecode(question.incorrect_answers[0])}</button>}\r\n                    {randomNumber===3||randomNumber===4 ? <button href=\"something\" className=\"button_hero\" onClick={correct_answer}>{htmlDecode(question.correct_answer)}</button>:<button href=\"something\" className=\"button_hero\" onClick={incorrect_answer}>{htmlDecode(question.incorrect_answers[0])}</button>}\r\n                </div> \r\n                : \r\n                <div className=\"buttons_wrapper\">\r\n                    {randomNumber===1 ? <button href=\"something\" className=\"button_hero\" onClick={correct_answer}>{htmlDecode(question.correct_answer)}</button>:<button href=\"something\" className=\"button_hero\" onClick={incorrect_answer}>{htmlDecode(question.incorrect_answers[orderOfIncorrect[0]])}</button>}\r\n                    {randomNumber===2 ? <button href=\"something\" className=\"button_hero\" onClick={correct_answer}>{htmlDecode(question.correct_answer)}</button>:<button href=\"something\" className=\"button_hero\" onClick={incorrect_answer}>{htmlDecode(question.incorrect_answers[orderOfIncorrect[1]])}</button>}\r\n                    {randomNumber===3 ? <button href=\"something\" className=\"button_hero\" onClick={correct_answer}>{htmlDecode(question.correct_answer)}</button>:<button href=\"something\" className=\"button_hero\" onClick={incorrect_answer}>{htmlDecode(question.incorrect_answers[orderOfIncorrect[2]])}</button>}\r\n                    {randomNumber===4 ? <button href=\"something\" className=\"button_hero\" onClick={correct_answer}>{htmlDecode(question.correct_answer)}</button>:<button href=\"something\" className=\"button_hero\" onClick={incorrect_answer}>{htmlDecode(question.incorrect_answers[orderOfIncorrect[3]])}</button>}\r\n                </div>\r\n                }</div> \r\n            : \r\n            <div>{showScore ? <h3>{resultInfo}</h3> : <h3></h3>}</div>}\r\n\r\n\r\n\r\n            \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default question\r\n","import { useState, useEffect } from 'react';\nimport background from \"./img/bg.png\";\nimport Question from './question';\n\nfunction App() {\n\n  \n  \n  const [playing, setPlaying] = useState(false)\n  const [showScore, setShowScore] = useState(false)\n  const [score, setScore] = useState(0)\n  const [questions, setQuestions] = useState([])\n  const [index, setIndex] = useState(0)\n  const [resultInfo, setResultInfo] = useState(`Right! Your Score - ${score}`)\n  const [showFinal, setShowFinal] = useState(false)\n  const [showButtons, setShowButtons] = useState(true)\n\n  const startGame = () => {\n    setPlaying(true)\n    setIndex(0)\n  }\n\n  const fetchQuestions = async () => {\n    let response = await fetch('https://opentdb.com/api.php?amount=10')\n    let data = await response.json()\n    setQuestions(data.results)\n  }\n\n  const restartGame = () => {\n    setIndex(0)\n    setPlaying(false)\n    setShowScore(false)\n    setShowFinal(false)\n    setScore(0)\n    setShowButtons(true)\n    fetchQuestions()\n  }\n\n  useEffect(() => {\n    fetchQuestions();\n  }, [])\n\n\n\n\n  if(playing === false) {\n    return (\n    <div className=\"App\" style={{ backgroundImage: `url(${background})`,height: \"100vh\", backgroundSize: \"cover\"}}>\n          <h1>IT'S<br/>QUIZ<br/>TIME</h1>\n          <button href=\"something\" className=\"button_hero\" onClick={startGame}>Play</button>\n    </div>\n    );\n  } else if(showFinal === true) {\n    return(\n      <div className=\"App\" style={{ backgroundImage: `url(${background})`,height: \"100vh\", backgroundSize: \"cover\"}}>\n          <h1>That's<br/>it!</h1>\n          <h3>Your final score - {score}</h3>\n          <button href=\"something\" className=\"button_hero\" onClick={restartGame}>Restart the game</button>\n    </div>\n    )\n  } else {\n    return (\n      <div className=\"App\" style={{ backgroundImage: `url(${background})`,height: \"100vh\", backgroundSize: \"cover\"}}>\n        <Question score={score} showScore={showScore} setShowScore={setShowScore} question={questions[index]} setScore={setScore} setIndex={setIndex} index={index} resultInfo={resultInfo} setResultInfo={setResultInfo} playing={playing} setPlaying={setPlaying} showFinal={showFinal} setShowFinal={setShowFinal} showButtons={showButtons} setShowButtons={setShowButtons}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}